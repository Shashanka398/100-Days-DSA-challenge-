Reverse a Linked List in groups of given size.
Link:https://practice.geeksforgeeks.org/problems/reverse-a-linked-list-in-groups-of-given-size/1

Given a linked list of size N. The task is to reverse every k nodes (where k is an input to the function) in the linked list. If the number of nodes is not a multiple of k then left-out nodes, in the end, should be considered as a group and must be reversed (See Example 2 for clarification).

Example 1:

Input:
LinkedList: 1->2->2->4->5->6->7->8
K = 4
Output: 4 2 2 1 8 7 6 5 
Explanation: 
The first 4 elements 1,2,2,4 are reversed first 
and then the next 4 elements 5,6,7,8. Hence, the 
resultant linked list is 4->2->2->1->8->7->6->5.

Solution:
class Solution:
    def reverse(self,head, k):
        # Code here
        if head==None:
            return None
        next=None
        pre=None
        cur=head
        c=0
        while cur !=None and c<k:
            next=cur.next
            cur.next=pre
            pre=cur
            cur=next
            c+=1
            
        if next!=None:
            head.next=self.reverse(next,k)
            
        return pre