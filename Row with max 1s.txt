Row with max 1s

Given a boolean 2D array of n x m dimensions where each row is sorted. Find the 0-based index of the first row that has the maximum number of 1's.

Example 1:

Input: 
N = 4 , M = 4
Arr[][] = {{0, 1, 1, 1},
           {0, 0, 1, 1},
           {1, 1, 1, 1},
           {0, 0, 0, 0}}
Output: 2
Explanation: Row 2 contains 4 1's (0-based
indexing).


Solution:
class Solution:

	def rowWithMax1s(self,arr, n, m):
		# code here
		ma=0
		pos=-1
		for i in range(n):
		    s=0
		    for j in range(m):
		        s+=arr[i][j]
		        
		    if(ma<s):
		        ma=s
		        pos=i
		return pos