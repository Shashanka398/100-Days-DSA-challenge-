Three way partitioning

Link:https://practice.geeksforgeeks.org/problems/three-way-partitioning/1

Given an array of size n and a range [a, b]. The task is to partition the array around the range such that array is divided into three parts.
1) All elements smaller than a come first.
2) All elements in range a to b come next.
3) All elements greater than b appear in the end.
The individual elements of three sets can appear in any order. You are required to return the modified array.


Input: 
n = 5
A[] = {1, 2, 3, 3, 4}
[a, b] = [1, 2]
Output: 1
Explanation: One possible arrangement is:
{1, 2, 3, 3, 4}. If you return a valid
arrangement, output will be 1.

Solution:


class Solution:
    #Function to partition the array around the range such 
    #that array is divided into three parts.
	def threeWayPartition(self, array, a, b):
	    # code here 
	    l=[i for i in  array if i<a ]
	    m=[i  for i in  array if i>=a and i<=b ]
	    n=[i for i in  array if i>b]
	    array.clear()
	    array=l[:]+m[:]+n[:]

