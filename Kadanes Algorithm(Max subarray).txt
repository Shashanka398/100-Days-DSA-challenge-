53. Maximum Subarray

Given an integer array nums, find the 
subarray
 with the largest sum, and return its sum.

 Link:https://leetcode.com/problems/maximum-subarray/description/

Example 1:

Input: nums = [-2,1,-3,4,-1,2,1,-5,4]
Output: 6
Explanation: The subarray [4,-1,2,1] has the largest sum 6.
Example 2:

Input: nums = [1]
Output: 1
Explanation: The subarray [1] has the largest sum 1.
Example 3:

Input: nums = [5,4,-1,7,8]
Output: 23
Explanation: The subarray [5,4,-1,7,8] has the largest sum 23.

Solution:
  from sys import maxint
class Solution(object):
    def maxSubArray(self, nums):
        maxsofar=-maxint - 1
        maxtill=0
        for i in range(0,len(nums)):
            maxtill=maxtill+nums[i]
            if maxsofar<maxtill:
                maxsofar=maxtill
            if maxtill<0:
                maxtill=0
        
        return maxsofar

        """
        :type nums: List[int]
        :rtype: int
        """