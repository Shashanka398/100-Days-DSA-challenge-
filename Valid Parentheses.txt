Valid Parentheses:

Link:https://leetcode.com/problems/valid-parentheses/description/
Given a string s containing just the characters '(', ')', '{', '}', '[' and ']', determine if the input string is valid.

An input string is valid if:

Open brackets must be closed by the same type of brackets.
Open brackets must be closed in the correct order.
Every close bracket has a corresponding open bracket of the same type.
 

Example 1:

Input: s = "()"
Output: true


Solution:
# class Solution:
#     def isValid(self, x: str) -> bool:
#         li=[]
#         for i in x:
#             if i=='[' or i=='(' or i=='{':
#                 li.append(i)
#                 continue
#             print(li)
            
#             if  (i==']' and len(li)>0 and li[len(li)-1]=='[') or (i==')' and len(li)>0 and li[len(li)-1]=='(') or (i=='}' and len(li)>0 and li[len(li)-1]=='{')  :

#                 li.pop()
#             else:
#                 return False

#         if len(li)==0:
#             return True
#         else:
#             return False

class Solution(object):
    def isValid(self, s):
        opcl = dict(('()', '[]', '{}'))
        stack = []
        for i in s:
            if i in '([{':
                stack.append(i)

            elif len(stack) == 0 or i != opcl[stack.pop()]:
                return False
        return len(stack) == 0
