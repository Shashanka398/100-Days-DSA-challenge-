56. Merge Intervals

Link:https://leetcode.com/problems/merge-intervals/


Given an array of intervals where intervals[i] = [starti, endi], merge all overlapping intervals, and return an array of the non-overlapping intervals that cover all the intervals in the input.

 

Example 1:

Input: intervals = [[1,3],[2,6],[8,10],[15,18]]
Output: [[1,6],[8,10],[15,18]]
Explanation: Since intervals [1,3] and [2,6] overlap, merge them into [1,6].



SOLUTION:
class Solution:
    def merge(self, intervals: List[List[int]]) -> List[List[int]]:
        if len(intervals)<2:return intervals

        intervals.sort()
        ans=[intervals[0]]

        for start,end in intervals[1:]:
            if start>ans[-1][1]:
                ans.append([start,end])
            elif end>ans[-1][1]:
                ans[-1][1]=end
        return ans
