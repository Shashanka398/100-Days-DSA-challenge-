Merge Sort for Linked List

Link:https://practice.geeksforgeeks.org/problems/sort-a-linked-list/1

Solution:
class Solution:
    #Function to sort the given linked list using Merge Sort.
    def mergeSort(self, head):
        
        if not head or not  head.next:
            return head
        slow,fast,prev=head,head,head
        while fast and fast.next:
            prev=slow
            slow=slow.next
            fast=fast.next.next

        mid=slow
        prev.next=None
        
        head1=self.mergeSort(head)
        head2=self.mergeSort(mid)
        
        merged_list=self.merge(head1,head2)
        
        return merged_list
    
    
    def merge(self,head1,head2):
        t=Node(0)
        temp=t
        while head1 and head2:
            if head1.data<=head2.data:
                temp.next=head1
                temp=temp.next
                head1=head1.next
            else:
                temp.next=head2
                temp=temp.next
                head2=head2.next
        
        if head1:
            temp.next=head1
        if head2:
            temp.next=head2
        
        return t.next