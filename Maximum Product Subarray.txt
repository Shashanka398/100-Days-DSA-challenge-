Maximum Product Subarray

Link:https://leetcode.com/problems/maximum-product-subarray/description/

Given an integer array nums, find a 
subarray
 that has the largest product, and return the product.

The test cases are generated so that the answer will fit in a 32-bit integer.

 

Example 1:

Input: nums = [2,3,-2,4]
Output: 6
Explanation: [2,3] has the largest product 6.
Example 2:

Input: nums = [-2,0,-1]
Output: 0
Explanation: The result cannot be 2, because [-2,-1] is not a subarray.

Solution:

class Solution:
    def maxProduct(self, nums: List[int]) -> int:
        ans=nums[0]
        mini=ans
        maxi=ans
        for i in range(1,len(nums)):
            if nums[i]<0:
                mini,maxi=maxi,mini
                continue
            maxi=max(nums[i],nums[i]*maxi)
            mini=min(nums[i],nums[i]*mini)
            ans=max(ans,maxi)
        return ans
